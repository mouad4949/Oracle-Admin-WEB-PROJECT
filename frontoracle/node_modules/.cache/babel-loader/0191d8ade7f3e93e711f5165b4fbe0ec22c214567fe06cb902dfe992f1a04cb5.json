{"ast":null,"code":"var _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Navbar from './Component/layout/Navbar';\nimport DashboardLayout from './Component/layout/DashboardLayout';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport DashOe from './pages/Dashboard/dashOne';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPath, setCurrentPath] = useState('/'); // État pour suivre la route actuelle\n\n  const handleNavigate = path => {\n    setCurrentPath(path); // Met à jour l'état lorsque la navigation est demandée\n    // Ici, vous pourriez utiliser un routeur comme React Router pour un vrai routage\n    // Dans cet exemple, on simule le routage en changeant la variable 'currentPath'.\n  };\n\n  // Fonction pour afficher le contenu en fonction de la route actuelle\n  const renderPage = () => {\n    switch (currentPath) {\n      case '/':\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this);\n      case '/dashboard':\n        return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n          onNavigate: handleNavigate,\n          currentPath: currentPath,\n          children: /*#__PURE__*/_jsxDEV(DashOe, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this);\n      case '/login':\n        return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      // Page par défaut si rien ne correspond\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onNavigate: handleNavigate,\n      currentPath: currentPath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-8 p-4\",\n      children: renderPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"YijyG0Xx6YpC9XDcbwUL2s5uR1I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","DashboardLayout","Login","Home","DashOe","jsxDEV","_jsxDEV","App","_s","currentPath","setCurrentPath","handleNavigate","path","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","children","className","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Navbar from './Component/layout/Navbar';\nimport DashboardLayout from './Component/layout/DashboardLayout';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport DashOe from './pages/Dashboard/dashOne';\n\nfunction App() {\n    const [currentPath, setCurrentPath] = useState('/'); // État pour suivre la route actuelle\n\n    const handleNavigate = (path) => {\n        setCurrentPath(path); // Met à jour l'état lorsque la navigation est demandée\n        // Ici, vous pourriez utiliser un routeur comme React Router pour un vrai routage\n        // Dans cet exemple, on simule le routage en changeant la variable 'currentPath'.\n    };\n\n    // Fonction pour afficher le contenu en fonction de la route actuelle\n    const renderPage = () => {\n        switch (currentPath) {\n            case '/':\n                return <Home />;\n            case '/dashboard':\n                return (\n                    <DashboardLayout\n                        onNavigate={handleNavigate}\n                        currentPath={currentPath}\n                    >\n                        <DashOe />\n                    </DashboardLayout>\n\n                );\n            case '/login':\n                return <Login />;\n            default:\n                return <Home />; // Page par défaut si rien ne correspond\n        }\n    };\n\n    return (\n        <div>\n            <Navbar onNavigate={handleNavigate} currentPath={currentPath} />\n            <div className=\"container mx-auto mt-8 p-4\">\n                {renderPage()}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAErD,MAAMY,cAAc,GAAIC,IAAI,IAAK;IAC7BF,cAAc,CAACE,IAAI,CAAC,CAAC,CAAC;IACtB;IACA;EACJ,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,QAAQJ,WAAW;MACf,KAAK,GAAG;QACJ,oBAAOH,OAAA,CAACH,IAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnB,KAAK,YAAY;QACb,oBACIX,OAAA,CAACL,eAAe;UACZiB,UAAU,EAAEP,cAAe;UAC3BF,WAAW,EAAEA,WAAY;UAAAU,QAAA,eAEzBb,OAAA,CAACF,MAAM;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAG1B,KAAK,QAAQ;QACT,oBAAOX,OAAA,CAACJ,KAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpB;QACI,oBAAOX,OAAA,CAACH,IAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAE;IACzB;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACN,MAAM;MAACkB,UAAU,EAAEP,cAAe;MAACF,WAAW,EAAEA;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEX,OAAA;MAAKc,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EACtCN,UAAU,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACT,EAAA,CAvCQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}