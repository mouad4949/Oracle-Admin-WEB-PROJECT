{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080';\nexport const fetchUsers = async () => {\n  const response = await axios.get(`${BASE_URL}/users`);\n  return response.data;\n};\nexport const createUser = async newUser => {\n  const response = await axios.post(`${BASE_URL}/CreateUser`, newUser);\n  return response.data;\n};\nexport const updateUser = async (id, updatedUser) => {\n  const response = await axios.post(`${BASE_URL}/UpdateUser`, updatedUser);\n  return response.data;\n};\nexport const grantRole = async userId => {\n  const response = await axios.post(`${BASE_URL}/grantRole/${userId}`);\n  return response.data;\n};\nexport const deleteUser = async username => {\n  const response = await axios.delete(`${BASE_URL}/DeleteUser`, {\n    params: {\n      username\n    } // Envoyer le username dans le corps de la requête\n  });\n  return response.data;\n};\nexport const fetchRoles = async (id, role) => {\n  const response = await axios.get(`${BASE_URL}/Roles`);\n  return response.data;\n};\nexport const fetchPrivileges = async (id, role) => {\n  const response = await axios.get(`${BASE_URL}/Privileges`);\n  return response.data;\n};\nexport const deleteRole = async id => {\n  const response = await axios.delete(`${BASE_URL}/Role/${id}`);\n};\nexport const createRole = async role => {\n  const response = await axios.post(`${BASE_URL}/CreateRole`, role);\n  return response.data;\n};\nexport const grantPrivilegeToRole = async (roleName, privilegeName) => {\n  const response = await fetch(`/api/roles/${roleName}/grant-privilege`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      privilegeName\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to grant privilege\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["axios","BASE_URL","fetchUsers","response","get","data","createUser","newUser","post","updateUser","id","updatedUser","grantRole","userId","deleteUser","username","delete","params","fetchRoles","role","fetchPrivileges","deleteRole","createRole","grantPrivilegeToRole","roleName","privilegeName","fetch","method","headers","body","JSON","stringify","ok","Error","json"],"sources":["E:/101/s3/react/frontoracle/src/Services/UsersService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:8080';\r\n\r\nexport const fetchUsers = async () => {\r\n    const response = await axios.get(`${BASE_URL}/users`);\r\n    return response.data;\r\n};\r\n\r\nexport const createUser = async (newUser) => {\r\n    const response = await axios.post(`${BASE_URL}/CreateUser`, newUser);\r\n    return response.data;\r\n};\r\n\r\nexport const updateUser = async (id, updatedUser) => {\r\n    const response = await axios.post(`${BASE_URL}/UpdateUser`, updatedUser);\r\n    return response.data;\r\n};\r\n\r\nexport const grantRole = async (userId) => {\r\n    const response = await axios.post(`${BASE_URL}/grantRole/${userId}`);\r\n    return response.data;\r\n};\r\nexport const deleteUser = async (username) => {\r\n    const response = await axios.delete(`${BASE_URL}/DeleteUser`, {\r\n        params: { username } // Envoyer le username dans le corps de la requête\r\n    });\r\n    return response.data;\r\n};\r\nexport const fetchRoles = async (id, role) => {\r\n    const response = await axios.get(`${BASE_URL}/Roles`);\r\n    return response.data;\r\n}\r\nexport const fetchPrivileges = async (id, role) => {\r\n    const response = await axios.get(`${BASE_URL}/Privileges`);\r\n    return response.data;\r\n}\r\nexport const deleteRole = async (id) => {\r\n    const response = await axios.delete(`${BASE_URL}/Role/${id}`);\r\n}\r\nexport const createRole = async (role) => {\r\n    const response = await axios.post(`${BASE_URL}/CreateRole`,role);\r\n    return response.data;\r\n};\r\nexport const grantPrivilegeToRole = async (roleName, privilegeName) => {\r\n    const response = await fetch(`/api/roles/${roleName}/grant-privilege`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ privilegeName }),\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to grant privilege\");\r\n    }\r\n    return response.json();\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,QAAQ,CAAC;EACrD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,OAAO,IAAK;EACzC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,QAAQ,aAAa,EAAEM,OAAO,CAAC;EACpE,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACjD,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,QAAQ,aAAa,EAAEU,WAAW,CAAC;EACxE,OAAOR,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOC,MAAM,IAAK;EACvC,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,QAAQ,cAAcY,MAAM,EAAE,CAAC;EACpE,OAAOV,QAAQ,CAACE,IAAI;AACxB,CAAC;AACD,OAAO,MAAMS,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAM,CAAC,GAAGf,QAAQ,aAAa,EAAE;IAC1DgB,MAAM,EAAE;MAAEF;IAAS,CAAC,CAAC;EACzB,CAAC,CAAC;EACF,OAAOZ,QAAQ,CAACE,IAAI;AACxB,CAAC;AACD,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOR,EAAE,EAAES,IAAI,KAAK;EAC1C,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,QAAQ,CAAC;EACrD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AACD,OAAO,MAAMe,eAAe,GAAG,MAAAA,CAAOV,EAAE,EAAES,IAAI,KAAK;EAC/C,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,aAAa,CAAC;EAC1D,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AACD,OAAO,MAAMgB,UAAU,GAAG,MAAOX,EAAE,IAAK;EACpC,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAM,CAAC,GAAGf,QAAQ,SAASS,EAAE,EAAE,CAAC;AACjE,CAAC;AACD,OAAO,MAAMY,UAAU,GAAG,MAAOH,IAAI,IAAK;EACtC,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,QAAQ,aAAa,EAACkB,IAAI,CAAC;EAChE,OAAOhB,QAAQ,CAACE,IAAI;AACxB,CAAC;AACD,OAAO,MAAMkB,oBAAoB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,aAAa,KAAK;EACnE,MAAMtB,QAAQ,GAAG,MAAMuB,KAAK,CAAC,cAAcF,QAAQ,kBAAkB,EAAE;IACnEG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN;IAAc,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACtB,QAAQ,CAAC6B,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAChD;EACA,OAAO9B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}