{"ast":null,"code":"var _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\pages\\\\GestionUsers\\\\commandLigne.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SQLTerminal = () => {\n  _s();\n  const [commands, setCommands] = useState([]);\n  const [currentCommand, setCurrentCommand] = useState('');\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const inputRef = useRef(null);\n  const terminalRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [commands]);\n  const executeCommand = async sqlCommand => {\n    setLoading(true);\n    try {\n      let response;\n      const isSelectQuery = sqlCommand.trim().toLowerCase().startsWith(\"select\");\n      if (isSelectQuery) {\n        response = await axios.get(\"http://localhost:8080/executeSelectSql\", {\n          params: {\n            sql: sqlCommand\n          } // Pass the SQL as a query parameter\n        });\n        setCommands(prevCommands => [...prevCommands, {\n          type: 'input',\n          content: sqlCommand\n        }, {\n          type: 'output',\n          content: JSON.stringify(response.data, null, 2)\n        }]);\n      } else {\n        response = await axios.post(\"http://localhost:8080/executeSql\", sqlCommand);\n        setCommands(prevCommands => [...prevCommands, {\n          type: 'input',\n          content: sqlCommand\n        }, {\n          type: 'output',\n          content: response.data\n        }]);\n      }\n      setHistory([sqlCommand, ...history]);\n      setCurrentCommand('');\n      setHistoryIndex(-1);\n    } catch (error) {\n      // setCommands(prevCommands => [\n      //     ...prevCommands,\n      //     { type: 'input', content: sqlCommand },\n      //     {type: 'output', content: error.response?.data || 'Error processing command'}\n      // ]);\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && currentCommand.trim()) {\n      e.preventDefault();\n      executeCommand(currentCommand);\n    }\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      const nextIndex = Math.min(historyIndex + 1, history.length - 1);\n      setHistoryIndex(nextIndex);\n      if (nextIndex >= 0 && history[nextIndex]) {\n        setCurrentCommand(history[nextIndex]);\n      }\n    }\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      const nextIndex = Math.max(historyIndex - 1, -1);\n      setHistoryIndex(nextIndex);\n      if (nextIndex >= 0) {\n        setCurrentCommand(history[nextIndex]);\n      } else {\n        setCurrentCommand('');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      className: \"bg-gray-900 text-green-400 p-4 rounded-lg h-96 overflow-y-auto font-mono\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: \"SQL Terminal - Tapez vos commandes SQL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Utilisez les fl\\xE8ches haut/bas pour naviguer dans l'historique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), commands.map((cmd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: cmd.type === 'input' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-400\",\n              children: \"sql> \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cmd.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300 ml-4\",\n            children: cmd.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-400\",\n            children: \"sql> \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: currentCommand,\n            onChange: e => setCurrentCommand(e.target.value),\n            onKeyDown: handleKeyDown,\n            className: \"flex-1 bg-transparent outline-none border-none ml-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(SQLTerminal, \"kN/wf/eUTbAnP/bUq2UbtSDzBuU=\");\n_c = SQLTerminal;\nexport default SQLTerminal;\nvar _c;\n$RefreshReg$(_c, \"SQLTerminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","SQLTerminal","_s","commands","setCommands","currentCommand","setCurrentCommand","history","setHistory","historyIndex","setHistoryIndex","inputRef","terminalRef","loading","setLoading","current","scrollTop","scrollHeight","executeCommand","sqlCommand","response","isSelectQuery","trim","toLowerCase","startsWith","get","params","sql","prevCommands","type","content","JSON","stringify","data","post","error","handleKeyDown","e","key","preventDefault","nextIndex","Math","min","length","max","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","cmd","index","value","onChange","target","onKeyDown","autoFocus","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/pages/GestionUsers/commandLigne.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SQLTerminal = () => {\r\n    const [commands, setCommands] = useState([]);\r\n    const [currentCommand, setCurrentCommand] = useState('');\r\n    const [history, setHistory] = useState([]);\r\n    const [historyIndex, setHistoryIndex] = useState(-1);\r\n    const inputRef = useRef(null);\r\n    const terminalRef = useRef(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (terminalRef.current) {\r\n            terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n        }\r\n    }, [commands]);\r\n\r\n    const executeCommand = async (sqlCommand) => {\r\n        setLoading(true);\r\n        try {\r\n            let response;\r\n            const isSelectQuery = sqlCommand.trim().toLowerCase().startsWith(\"select\");\r\n            if (isSelectQuery) {\r\n                response = await axios.get(\"http://localhost:8080/executeSelectSql\", {\r\n                    params: {sql: sqlCommand}, // Pass the SQL as a query parameter\r\n                });\r\n                setCommands(prevCommands => [\r\n                    ...prevCommands,\r\n                    {type: 'input', content: sqlCommand},\r\n                    {type: 'output', content: JSON.stringify(response.data, null, 2)},\r\n                ]);\r\n            } else {\r\n                response = await axios.post(\"http://localhost:8080/executeSql\", sqlCommand);\r\n                setCommands(prevCommands => [\r\n                    ...prevCommands,\r\n                    {type: 'input', content: sqlCommand},\r\n                    {type: 'output', content: response.data}\r\n                ]);\r\n            }\r\n\r\n            setHistory([sqlCommand, ...history]);\r\n            setCurrentCommand('');\r\n            setHistoryIndex(-1);\r\n\r\n\r\n            } catch (error) {\r\n                // setCommands(prevCommands => [\r\n                //     ...prevCommands,\r\n                //     { type: 'input', content: sqlCommand },\r\n                //     {type: 'output', content: error.response?.data || 'Error processing command'}\r\n                // ]);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter' && currentCommand.trim()) {\r\n            e.preventDefault();\r\n            executeCommand(currentCommand)\r\n\r\n        }\r\n\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            e.preventDefault();\r\n            const nextIndex = Math.min(historyIndex + 1, history.length - 1);\r\n            setHistoryIndex(nextIndex);\r\n            if (nextIndex >= 0 && history[nextIndex]) {\r\n                setCurrentCommand(history[nextIndex]);\r\n            }\r\n        }\r\n\r\n        if (e.key === 'ArrowDown') {\r\n            e.preventDefault();\r\n            const nextIndex = Math.max(historyIndex - 1, -1);\r\n            setHistoryIndex(nextIndex);\r\n            if (nextIndex >= 0) {\r\n                setCurrentCommand(history[nextIndex]);\r\n            } else {\r\n                setCurrentCommand('');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-3xl mx-auto p-4\">\r\n            <div\r\n                ref={terminalRef}\r\n                className=\"bg-gray-900 text-green-400 p-4 rounded-lg h-96 overflow-y-auto font-mono\"\r\n            >\r\n                {loading && <p className=\"text-white text-center\">Loading...</p> }\r\n                {!loading && (\r\n                    <div>\r\n                        <div className=\"mb-4\">\r\n                            {/* En-tête du terminal */}\r\n                            <p className=\"text-white\">SQL Terminal - Tapez vos commandes SQL</p>\r\n                            <p className=\"text-gray-500\">Utilisez les flèches haut/bas pour naviguer dans l'historique</p>\r\n                        </div>\r\n\r\n                        {/* Historique des commandes */}\r\n                        {commands.map((cmd, index) => (\r\n                            <div key={index} className=\"mb-2\">\r\n                                {cmd.type === 'input' ? (\r\n                                    <div>\r\n                                        <span className=\"text-blue-400\">sql> </span>\r\n                                        <span>{cmd.content}</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"text-gray-300 ml-4\">{cmd.content}</div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                        {/* Ligne de commande active */}\r\n                        <div className=\"flex\">\r\n                            <span className=\"text-blue-400\">sql> </span>\r\n                            <input\r\n                                ref={inputRef}\r\n                                type=\"text\"\r\n                                value={currentCommand}\r\n                                onChange={(e) => setCurrentCommand(e.target.value)}\r\n                                onKeyDown={handleKeyDown}\r\n                                className=\"flex-1 bg-transparent outline-none border-none ml-2\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SQLTerminal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}