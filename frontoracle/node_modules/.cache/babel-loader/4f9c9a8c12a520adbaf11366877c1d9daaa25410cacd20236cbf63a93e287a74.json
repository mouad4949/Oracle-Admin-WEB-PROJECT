{"ast":null,"code":"var _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\Component\\\\HighAvailability\\\\FailoverSimulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../../api/axios';\nimport Button from '../Button';\nimport Loading from '../Loading';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FailoverSimulation = () => {\n  _s();\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSimulateFailover = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:8080/api/ha/simulate-failover');\n      setMessage(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleSimulateFailback = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.get('/ha/simulate-failback');\n      setMessage(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500 p-4\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-700\",\n      children: \"Data Guard Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSimulateFailover,\n        styleButton: \"bg-red-700 text-white\",\n        children: \"Simulate Failover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSimulateFailback,\n        styleButton: \"bg-red-700 text-white\",\n        children: \"Simulate Failback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-600 font-semibold\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(FailoverSimulation, \"ABZQAlkQPTenFGg9x94ZN8oqls4=\");\n_c = FailoverSimulation;\nexport default FailoverSimulation;\nvar _c;\n$RefreshReg$(_c, \"FailoverSimulation\");","map":{"version":3,"names":["React","useState","api","Button","Loading","axios","jsxDEV","_jsxDEV","FailoverSimulation","_s","message","setMessage","loading","setLoading","error","setError","handleSimulateFailover","response","get","data","err","handleSimulateFailback","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","styleButton","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/Component/HighAvailability/FailoverSimulation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../../api/axios';\r\nimport Button from '../Button';\r\nimport Loading from '../Loading';\r\nimport axios from 'axios';\r\n\r\nconst FailoverSimulation = () => {\r\n    const [message, setMessage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSimulateFailover = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/ha/simulate-failover');\r\n            setMessage(response.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSimulateFailback = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await api.get('/ha/simulate-failback');\r\n            setMessage(response.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <Loading />;\r\n    if (error) return <p className=\"text-red-500 p-4\">Error: {error}</p>;\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Data Guard Simulation</h2>\r\n            <div className=\"flex flex-wrap gap-2 items-center\">\r\n                <Button onClick={handleSimulateFailover} styleButton={\"bg-red-700 text-white\"}>Simulate Failover</Button>\r\n                <Button onClick={handleSimulateFailback} styleButton={\"bg-red-700 text-white\"}>Simulate Failback</Button>\r\n            </div>\r\n            {message && <p className=\"mt-4 text-green-600 font-semibold\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FailoverSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}