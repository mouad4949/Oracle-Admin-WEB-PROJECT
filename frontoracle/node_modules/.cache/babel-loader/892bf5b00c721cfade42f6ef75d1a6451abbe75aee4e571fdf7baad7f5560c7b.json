{"ast":null,"code":"var _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\pages\\\\GestionUsers\\\\Roles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport RoleList from \"../../Component/RolesList\";\nimport RoleModalCreate from \"../../Component/RolesModelCreate\";\nimport GrantPrivilegeModal from \"../../Component/GrantPrivilegeModal\"; // Import the new modal\nimport { fetchRoles, createRole, deleteRole } from \"../../Services/UsersService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roles = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isGrantModalOpen, setIsGrantModalOpen] = useState(false); // State for GrantPrivilegeModal\n  const [selectedRole, setSelectedRole] = useState(\"\"); // State to store the selected role name\n  const [currentRoleCreate, setCurrentRoleCreate] = useState({\n    roleName: \"\",\n    authType: \"NOT_IDENTIFIED\",\n    password: \"\"\n  });\n\n  // Fetch roles on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchRoles();\n        setRoles(data);\n      } catch (err) {\n        console.error(\"Error fetching roles:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Modal handlers\n  const handleCreateModalOpen = () => {\n    setIsCreateModalOpen(true);\n    setCurrentRoleCreate({\n      roleName: \"\",\n      authType: \"NOT_IDENTIFIED\",\n      password: \"\"\n    });\n  };\n  const handleCreateModalClose = () => {\n    setIsCreateModalOpen(false);\n  };\n  const handleGrantModalOpen = roleName => {\n    setSelectedRole(roleName);\n    setIsGrantModalOpen(true);\n  };\n  const handleGrantModalClose = () => {\n    setIsGrantModalOpen(false);\n    setSelectedRole(\"\");\n  };\n\n  // Input handlers\n  const handleCreateInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentRoleCreate({\n      ...currentRoleCreate,\n      [name]: value\n    });\n  };\n\n  // Submit handlers\n  const handleCreateSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createRole(currentRoleCreate);\n      const updatedRoles = await fetchRoles();\n      setRoles(updatedRoles);\n      handleCreateModalClose();\n    } catch (err) {\n      console.error(\"Error creating role:\", err);\n    }\n  };\n  const handleDelete = async roleName => {\n    try {\n      await deleteRole(roleName);\n      alert(\"Rôle supprimé avec succès !\");\n      const updatedRoles = await fetchRoles();\n      setRoles(updatedRoles);\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression du rôle :\", error);\n      alert(\"Erreur lors de la suppression du rôle.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateModalOpen,\n      className: \"text-2xl font-semibold mb-4 text-green-600\",\n      children: \"Ajouter un r\\xF4le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoleList, {\n      roles: roles,\n      loading: loading,\n      onDelete: handleDelete,\n      onGrant: handleGrantModalOpen // Pass the grant handler to RoleList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoleModalCreate, {\n      isOpen: isCreateModalOpen,\n      roles: currentRoleCreate,\n      onClose: handleCreateModalClose,\n      onChange: handleCreateInputChange,\n      onSubmit: handleCreateSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GrantPrivilegeModal, {\n      isOpen: isGrantModalOpen,\n      onClose: handleGrantModalClose,\n      roleName: selectedRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Roles, \"DgzVIf0UvL9mN0lTYSBVnSnHEZc=\");\n_c = Roles;\nexport default Roles;\nvar _c;\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"names":["React","useState","useEffect","RoleList","RoleModalCreate","GrantPrivilegeModal","fetchRoles","createRole","deleteRole","jsxDEV","_jsxDEV","Roles","_s","roles","setRoles","loading","setLoading","isCreateModalOpen","setIsCreateModalOpen","isGrantModalOpen","setIsGrantModalOpen","selectedRole","setSelectedRole","currentRoleCreate","setCurrentRoleCreate","roleName","authType","password","fetchData","data","err","console","error","handleCreateModalOpen","handleCreateModalClose","handleGrantModalOpen","handleGrantModalClose","handleCreateInputChange","e","name","value","target","handleCreateSubmit","preventDefault","updatedRoles","handleDelete","alert","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onGrant","isOpen","onClose","onChange","onSubmit","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/pages/GestionUsers/Roles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RoleList from \"../../Component/RolesList\";\r\nimport RoleModalCreate from \"../../Component/RolesModelCreate\";\r\nimport GrantPrivilegeModal from \"../../Component/GrantPrivilegeModal\"; // Import the new modal\r\nimport { fetchRoles, createRole, deleteRole } from \"../../Services/UsersService\";\r\n\r\n\r\nconst Roles = () => {\r\n    const [roles, setRoles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n    const [isGrantModalOpen, setIsGrantModalOpen] = useState(false); // State for GrantPrivilegeModal\r\n    const [selectedRole, setSelectedRole] = useState(\"\"); // State to store the selected role name\r\n    const [currentRoleCreate, setCurrentRoleCreate] = useState({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n\r\n    // Fetch roles on component mount\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await fetchRoles();\r\n                setRoles(data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching roles:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Modal handlers\r\n    const handleCreateModalOpen = () => {\r\n        setIsCreateModalOpen(true);\r\n        setCurrentRoleCreate({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n    };\r\n\r\n    const handleCreateModalClose = () => {\r\n        setIsCreateModalOpen(false);\r\n    };\r\n\r\n    const handleGrantModalOpen = (roleName) => {\r\n        setSelectedRole(roleName);\r\n        setIsGrantModalOpen(true);\r\n    };\r\n\r\n    const handleGrantModalClose = () => {\r\n        setIsGrantModalOpen(false);\r\n        setSelectedRole(\"\");\r\n    };\r\n\r\n    // Input handlers\r\n    const handleCreateInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentRoleCreate({ ...currentRoleCreate, [name]: value });\r\n    };\r\n\r\n    // Submit handlers\r\n    const handleCreateSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createRole(currentRoleCreate);\r\n            const updatedRoles = await fetchRoles();\r\n            setRoles(updatedRoles);\r\n            handleCreateModalClose();\r\n        } catch (err) {\r\n            console.error(\"Error creating role:\", err);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (roleName) => {\r\n        try {\r\n            await deleteRole(roleName);\r\n            alert(\"Rôle supprimé avec succès !\");\r\n            const updatedRoles = await fetchRoles();\r\n            setRoles(updatedRoles);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la suppression du rôle :\", error);\r\n            alert(\"Erreur lors de la suppression du rôle.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleCreateModalOpen} className=\"text-2xl font-semibold mb-4 text-green-600\">\r\n                Ajouter un rôle\r\n            </button>\r\n            <RoleList\r\n                roles={roles}\r\n                loading={loading}\r\n                onDelete={handleDelete}\r\n                onGrant={handleGrantModalOpen} // Pass the grant handler to RoleList\r\n            />\r\n\r\n            <RoleModalCreate\r\n                isOpen={isCreateModalOpen}\r\n                roles={currentRoleCreate}\r\n                onClose={handleCreateModalClose}\r\n                onChange={handleCreateInputChange}\r\n                onSubmit={handleCreateSubmit}\r\n            />\r\n\r\n            <GrantPrivilegeModal\r\n                isOpen={isGrantModalOpen}\r\n                onClose={handleGrantModalClose}\r\n                roleName={selectedRole}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Roles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}