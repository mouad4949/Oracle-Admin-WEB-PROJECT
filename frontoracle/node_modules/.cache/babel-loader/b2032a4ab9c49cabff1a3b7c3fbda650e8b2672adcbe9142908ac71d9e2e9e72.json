{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nexport const useASHData = () => {\n  _s();\n  const [ashData, setASHData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortColumn, setSortColumn] = useState('sampleTime');\n  const [sortDirection, setSortDirection] = useState('desc');\n  useEffect(() => {\n    const fetchASHData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/performance/ash-reports');\n        setASHData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchASHData();\n  }, []);\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n  const debouncedSearch = useMemo(() => debounce(query => setSearchQuery(query), 300), []);\n  const filteredAndSortedData = useMemo(() => {\n    if (!ashData) return [];\n    const searchTerms = searchQuery.toLowerCase().split(\" \");\n    return ashData.filter(ash => {\n      return searchTerms.every(term => ash.sqlId && ash.sqlId.toLowerCase().includes(term) || ash.event && ash.event.toLowerCase().includes(term) || ash.sessionState && ash.sessionState.toLowerCase().includes(term));\n    }).sort((a, b) => {\n      const aValue = a[sortColumn] || '';\n      const bValue = b[sortColumn] || '';\n      const comparison = String(aValue).localeCompare(String(bValue));\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  }, [ashData, searchQuery, sortColumn, sortDirection]);\n  return {\n    ashData: filteredAndSortedData,\n    loading,\n    error,\n    searchQuery,\n    sortColumn,\n    sortDirection,\n    handleSort,\n    handleSearch: debouncedSearch\n  };\n};\n_s(useASHData, \"9MJkZ//5oLbZLYiVMgbXxCX+DsM=\");","map":{"version":3,"names":["useState","useEffect","useMemo","axios","debounce","useASHData","_s","ashData","setASHData","loading","setLoading","error","setError","searchQuery","setSearchQuery","sortColumn","setSortColumn","sortDirection","setSortDirection","fetchASHData","response","get","data","err","message","handleSort","column","debouncedSearch","query","filteredAndSortedData","searchTerms","toLowerCase","split","filter","ash","every","term","sqlId","includes","event","sessionState","sort","a","b","aValue","bValue","comparison","String","localeCompare","handleSearch"],"sources":["E:/101/s3/react/frontoracle/src/Component/hooks/useASHData.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\n\nexport const useASHData = () => {\n  const [ashData, setASHData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortColumn, setSortColumn] = useState('sampleTime');\n  const [sortDirection, setSortDirection] = useState('desc');\n\n  useEffect(() => {\n    const fetchASHData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/performance/ash-reports');\n        setASHData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchASHData();\n  }, []);\n\n  const handleSort = (column) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n\n  const debouncedSearch = useMemo(\n    () => debounce((query) => setSearchQuery(query), 300),\n    []\n  );\n\n  const filteredAndSortedData = useMemo(() => {\n    if (!ashData) return [];\n    const searchTerms = searchQuery.toLowerCase().split(\" \");\n    return ashData\n      .filter(ash => {\n        return searchTerms.every(term =>\n          (ash.sqlId && ash.sqlId.toLowerCase().includes(term)) ||\n          (ash.event && ash.event.toLowerCase().includes(term)) ||\n          (ash.sessionState && ash.sessionState.toLowerCase().includes(term))\n        );\n      })\n      .sort((a, b) => {\n        const aValue = a[sortColumn] || '';\n        const bValue = b[sortColumn] || '';\n        const comparison = String(aValue).localeCompare(String(bValue));\n        return sortDirection === 'asc' ? comparison : -comparison;\n      });\n  }, [ashData, searchQuery, sortColumn, sortDirection]);\n\n  return {\n    ashData: filteredAndSortedData,\n    loading,\n    error,\n    searchQuery,\n    sortColumn,\n    sortDirection,\n    handleSort,\n    handleSearch: debouncedSearch,\n  };\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}