{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\Component\\\\rman\\\\restore-operations.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { RotateCcw, Calendar } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../../../../s3/react/frontoracle/src/components/ui/card';\nimport { Button } from '../../../../../../s3/react/frontoracle/src/components/ui/button';\nimport { Input } from '../../../../../../s3/react/frontoracle/src/components/ui/input';\nimport { useToast } from '../../../../../../s3/react/frontoracle/src/components/ui/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RestoreOperations() {\n  _s();\n  const [loading, setLoading] = useState(null);\n  const [restoreDate, setRestoreDate] = useState('');\n  const [operationStatus, setOperationStatus] = useState({});\n  const {\n    toast\n  } = useToast();\n  const handleRestore = async type => {\n    setLoading(type);\n    setOperationStatus(prev => ({\n      ...prev,\n      [type]: 'Processing'\n    }));\n    try {\n      const url = type === 'restoreByDate' ? `http://localhost:8080/rman/restoreByDate?date=${restoreDate}` : `http://localhost:8080/rman/restore_recover`;\n      const response = await fetch(url);\n      const data = await response.text();\n      setOperationStatus(prev => ({\n        ...prev,\n        [type]: 'Success'\n      }));\n      toast({\n        title: 'Restore Successful',\n        description: `Database restore completed successfully: ${data}`,\n        className: 'bg-red-50 border-red-200'\n      });\n    } catch (error) {\n      setOperationStatus(prev => ({\n        ...prev,\n        [type]: 'Failed'\n      }));\n      toast({\n        title: 'Restore Failed',\n        description: 'There was an error performing the restore operation',\n        variant: 'destructive'\n      });\n    }\n    setLoading(null);\n  };\n  const renderButton = (type, label) => /*#__PURE__*/_jsxDEV(Button, {\n    className: \"w-full bg-red-700 hover:bg-red-800\",\n    onClick: () => handleRestore(type),\n    disabled: !!loading || type === 'restoreByDate' && !restoreDate,\n    children: loading === type ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        className: \"mr-2 h-4 w-4 animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), \"Processing...\"]\n    }, void 0, true) : label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  const renderStatus = type => {\n    const status = operationStatus[type];\n    if (!status) return null;\n    const color = status === 'Success' ? 'text-green-600' : 'text-red-600';\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mt-2 text-sm ${color}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid gap-4 md:grid-cols-2\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center gap-2 text-red-700\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \"Restore and Recover\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n          children: \"Restore and recover the database to the latest state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [renderButton('restore_recover', 'Start Restore'), renderStatus('restore_recover')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center gap-2 text-red-700\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), \"Point-in-Time Recovery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n          children: \"Restore database to a specific point in time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"YYYY-MM-DD HH24:MI:SS\",\n          value: restoreDate,\n          onChange: e => setRestoreDate(e.target.value),\n          className: \"border-red-200 focus:ring-red-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), renderButton('restoreByDate', 'Restore to Point-in-Time'), renderStatus('restoreByDate')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(RestoreOperations, \"bB6ysGhA1/RUh1gdAuNhl4nn+No=\", false, function () {\n  return [useToast];\n});\n_c = RestoreOperations;\nvar _c;\n$RefreshReg$(_c, \"RestoreOperations\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","RotateCcw","Calendar","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","Input","useToast","Loader2","jsxDEV","_jsxDEV","Fragment","_Fragment","RestoreOperations","loading","setLoading","restoreDate","setRestoreDate","operationStatus","setOperationStatus","toast","handleRestore","type","prev","url","response","fetch","data","text","title","description","className","error","variant","renderButton","label","onClick","disabled","children","fileName","lineNumber","columnNumber","renderStatus","status","color","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/Component/rman/restore-operations.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { RotateCcw, Calendar } from 'lucide-react'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../../../../s3/react/frontoracle/src/components/ui/card'\r\nimport { Button } from '../../../../../../s3/react/frontoracle/src/components/ui/button'\r\nimport { Input } from '../../../../../../s3/react/frontoracle/src/components/ui/input'\r\nimport { useToast } from '../../../../../../s3/react/frontoracle/src/components/ui/use-toast'\r\nimport { Loader2 } from 'lucide-react'\r\n\r\nexport function RestoreOperations() {\r\n  const [loading, setLoading] = useState(null)\r\n  const [restoreDate, setRestoreDate] = useState('')\r\n  const [operationStatus, setOperationStatus] = useState({})\r\n  const { toast } = useToast()\r\n\r\n  const handleRestore = async (type) => {\r\n    setLoading(type)\r\n    setOperationStatus(prev => ({ ...prev, [type]: 'Processing' }))\r\n    try {\r\n      const url = type === 'restoreByDate' \r\n        ? `http://localhost:8080/rman/restoreByDate?date=${restoreDate}`\r\n        : `http://localhost:8080/rman/restore_recover`\r\n      \r\n      const response = await fetch(url)\r\n      const data = await response.text()\r\n      \r\n      setOperationStatus(prev => ({ ...prev, [type]: 'Success' }))\r\n      toast({\r\n        title: 'Restore Successful',\r\n        description: `Database restore completed successfully: ${data}`,\r\n        className: 'bg-red-50 border-red-200',\r\n      })\r\n    } catch (error) {\r\n      setOperationStatus(prev => ({ ...prev, [type]: 'Failed' }))\r\n      toast({\r\n        title: 'Restore Failed',\r\n        description: 'There was an error performing the restore operation',\r\n        variant: 'destructive',\r\n      })\r\n    }\r\n    setLoading(null)\r\n  }\r\n\r\n  const renderButton = (type, label) => (\r\n    <Button \r\n      className=\"w-full bg-red-700 hover:bg-red-800\"\r\n      onClick={() => handleRestore(type)}\r\n      disabled={!!loading || (type === 'restoreByDate' && !restoreDate)}\r\n    >\r\n      {loading === type ? (\r\n        <>\r\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n          Processing...\r\n        </>\r\n      ) : (\r\n        label\r\n      )}\r\n    </Button>\r\n  )\r\n\r\n  const renderStatus = (type) => {\r\n    const status = operationStatus[type]\r\n    if (!status) return null\r\n    const color = status === 'Success' ? 'text-green-600' : 'text-red-600'\r\n    return <p className={`mt-2 text-sm ${color}`}>{status}</p>\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid gap-4 md:grid-cols-2\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n            <RotateCcw className=\"h-5 w-5\" />\r\n            Restore and Recover\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Restore and recover the database to the latest state\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {renderButton('restore_recover', 'Start Restore')}\r\n          {renderStatus('restore_recover')}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n            <Calendar className=\"h-5 w-5\" />\r\n            Point-in-Time Recovery\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Restore database to a specific point in time\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"YYYY-MM-DD HH24:MI:SS\"\r\n            value={restoreDate}\r\n            onChange={(e) => setRestoreDate(e.target.value)}\r\n            className=\"border-red-200 focus:ring-red-700\"\r\n          />\r\n          {renderButton('restoreByDate', 'Restore to Point-in-Time')}\r\n          {renderStatus('restoreByDate')}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}