{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\Component\\\\rman\\\\backup-history.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../../../../../s3/react/frontoracle/src/components/ui/table';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../../../../s3/react/frontoracle/src/components/ui/card';\nimport { Loader2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BackupHistory() {\n  _s();\n  const [backups, setBackups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBackups = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/rman/list_Backup');\n        const data = await response.json();\n        setBackups(data.Backups || []);\n      } catch (error) {\n        console.error('Failed to fetch backups:', error);\n      }\n      setLoading(false);\n    };\n    fetchBackups();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"text-red-700\",\n        children: \"Backup History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n        children: \"List of all database backups and their status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Device Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Completion Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              className: \"text-red-700\",\n              children: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: loading ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 7,\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                className: \"mr-2 h-4 w-4 animate-spin inline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), \"Loading...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : backups.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 7,\n              className: \"text-center\",\n              children: \"No backup history found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : backups.map((backup, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.Key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.Level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.Status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.DeviceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.CompletionTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: backup.Tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BackupHistory, \"HBgM0a3lB6wGqG3cguF2hUavETg=\");\n_c = BackupHistory;\nvar _c;\n$RefreshReg$(_c, \"BackupHistory\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","Card","CardContent","CardDescription","CardHeader","CardTitle","Loader2","jsxDEV","_jsxDEV","BackupHistory","backups","setBackups","loading","setLoading","fetchBackups","response","fetch","data","json","Backups","error","console","children","className","fileName","lineNumber","columnNumber","colSpan","length","map","backup","index","Key","Type","Level","Status","DeviceType","CompletionTime","Tag","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/Component/rman/backup-history.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../../../../../s3/react/frontoracle/src/components/ui/table'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../../../../s3/react/frontoracle/src/components/ui/card'\r\nimport { Loader2 } from 'lucide-react'\r\n\r\nexport function BackupHistory() {\r\n  const [backups, setBackups] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const fetchBackups = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/rman/list_Backup')\r\n        const data = await response.json()\r\n        setBackups(data.Backups || [])\r\n      } catch (error) {\r\n        console.error('Failed to fetch backups:', error)\r\n      }\r\n      setLoading(false)\r\n    }\r\n\r\n    fetchBackups()\r\n  }, [])\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"text-red-700\">Backup History</CardTitle>\r\n        <CardDescription>\r\n          List of all database backups and their status\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead className=\"text-red-700\">Key</TableHead>\r\n              <TableHead className=\"text-red-700\">Type</TableHead>\r\n              <TableHead className=\"text-red-700\">Level</TableHead>\r\n              <TableHead className=\"text-red-700\">Status</TableHead>\r\n              <TableHead className=\"text-red-700\">Device Type</TableHead>\r\n              <TableHead className=\"text-red-700\">Completion Time</TableHead>\r\n              <TableHead className=\"text-red-700\">Tag</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {loading ? (\r\n              <TableRow>\r\n                <TableCell colSpan={7} className=\"text-center\">\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin inline\" />\r\n                  Loading...\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : backups.length === 0 ? (\r\n              <TableRow>\r\n                <TableCell colSpan={7} className=\"text-center\">No backup history found</TableCell>\r\n              </TableRow>\r\n            ) : (\r\n              backups.map((backup, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{backup.Key}</TableCell>\r\n                  <TableCell>{backup.Type}</TableCell>\r\n                  <TableCell>{backup.Level}</TableCell>\r\n                  <TableCell>{backup.Status}</TableCell>\r\n                  <TableCell>{backup.DeviceType}</TableCell>\r\n                  <TableCell>{backup.CompletionTime}</TableCell>\r\n                  <TableCell>{backup.Tag}</TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}