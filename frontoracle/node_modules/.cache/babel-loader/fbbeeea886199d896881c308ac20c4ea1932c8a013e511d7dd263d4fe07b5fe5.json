{"ast":null,"code":"var _jsxFileName = \"E:\\\\101\\\\s3\\\\react\\\\frontoracle\\\\src\\\\pages\\\\GestionUsers\\\\Roles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport RoleList from \"../../Component/RolesList\";\nimport RoleModalCreate from \"../../Component/RolesModelCreate\";\nimport { fetchRoles, createRole, deleteRole } from \"../../Services/UsersService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roles = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\n  const [currentRoleCreate, setCurrentRoleCreate] = useState({\n    roleName: \"\",\n    authType: \"NOT_IDENTIFIED\",\n    password: \"\"\n  });\n  const [currentRoleUpdate, setCurrentRoleUpdate] = useState({\n    roleName: \"\",\n    authType: \"NOT_IDENTIFIED\",\n    password: \"\"\n  });\n\n  // Fetch roles on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchRoles();\n        setRoles(data);\n      } catch (err) {\n        console.error(\"Error fetching roles:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Modal handlers\n  const handleCreateModalOpen = () => {\n    setIsCreateModalOpen(true);\n    setCurrentRoleCreate({\n      roleName: \"\",\n      authType: \"NOT_IDENTIFIED\",\n      password: \"\"\n    });\n  };\n  const handleCreateModalClose = () => {\n    setIsCreateModalOpen(false);\n    setCurrentRoleCreate({\n      roleName: \"\",\n      authType: \"NOT_IDENTIFIED\",\n      password: \"\"\n    });\n  };\n  const handleUpdateModalOpen = role => {\n    setIsUpdateModalOpen(true);\n    setCurrentRoleUpdate({\n      roleName: role.roleName,\n      authType: role.authType,\n      password: role.password\n    });\n  };\n  const handleUpdateModalClose = () => {\n    setIsUpdateModalOpen(false);\n    setCurrentRoleUpdate({\n      roleName: \"\",\n      authType: \"NOT_IDENTIFIED\",\n      password: \"\"\n    });\n  };\n\n  // Input handlers\n  const handleCreateInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentRoleCreate({\n      ...currentRoleCreate,\n      [name]: value\n    });\n  };\n  const handleUpdateInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentRoleUpdate({\n      ...currentRoleUpdate,\n      [name]: value\n    });\n  };\n  // Submit handlers\n  const handleCreateSubmit = async () => {\n    try {\n      await createRole(currentRoleCreate);\n      const updatedRoles = await fetchRoles();\n      setRoles(updatedRoles);\n      handleCreateModalClose();\n    } catch (err) {\n      console.error(\"Error creating role:\", err);\n    }\n  };\n  const handleDelete = async roleName => {\n    try {\n      await deleteRole(roleName);\n      alert(\"Rôle supprimé avec succès !\");\n      const updatedRoles = await fetchRoles();\n      setRoles(updatedRoles);\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression du rôle :\", error);\n      alert(\"Erreur lors de la suppression du rôle.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateModalOpen,\n      className: \"text-2xl font-semibold mb-4 text-green-600\",\n      children: \"Ajouter un r\\xF4le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoleList, {\n      roles: roles,\n      loading: loading,\n      onEdit: handleUpdateModalOpen,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoleModalCreate, {\n      isOpen: isCreateModalOpen,\n      role: currentRoleCreate,\n      onClose: handleCreateModalClose,\n      onChange: handleCreateInputChange,\n      onSubmit: handleCreateSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Roles, \"cmT/LIbsft9QTc01S3FYWt9MAa0=\");\n_c = Roles;\nexport default Roles;\nvar _c;\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"names":["React","useState","useEffect","RoleList","RoleModalCreate","fetchRoles","createRole","deleteRole","jsxDEV","_jsxDEV","Roles","_s","roles","setRoles","loading","setLoading","isCreateModalOpen","setIsCreateModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","currentRoleCreate","setCurrentRoleCreate","roleName","authType","password","currentRoleUpdate","setCurrentRoleUpdate","fetchData","data","err","console","error","handleCreateModalOpen","handleCreateModalClose","handleUpdateModalOpen","role","handleUpdateModalClose","handleCreateInputChange","e","name","value","target","handleUpdateInputChange","handleCreateSubmit","updatedRoles","handleDelete","alert","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","isOpen","onClose","onChange","onSubmit","_c","$RefreshReg$"],"sources":["E:/101/s3/react/frontoracle/src/pages/GestionUsers/Roles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RoleList from \"../../Component/RolesList\";\r\nimport RoleModalCreate from \"../../Component/RolesModelCreate\";\r\nimport { fetchRoles, createRole, deleteRole } from \"../../Services/UsersService\";\r\n\r\nconst Roles = () => {\r\n    const [roles, setRoles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n    const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n    const [currentRoleCreate, setCurrentRoleCreate] = useState({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n    const [currentRoleUpdate, setCurrentRoleUpdate] = useState({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n\r\n    // Fetch roles on component mount\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data = await fetchRoles();\r\n                setRoles(data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching roles:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Modal handlers\r\n    const handleCreateModalOpen = () => {\r\n        setIsCreateModalOpen(true);\r\n        setCurrentRoleCreate({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n    };\r\n\r\n    const handleCreateModalClose = () => {\r\n        setIsCreateModalOpen(false);\r\n        setCurrentRoleCreate({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n    };\r\n\r\n    const handleUpdateModalOpen = (role) => {\r\n        setIsUpdateModalOpen(true);\r\n        setCurrentRoleUpdate({\r\n            roleName: role.roleName,\r\n            authType: role.authType,\r\n            password: role.password,\r\n        });\r\n    };\r\n\r\n    const handleUpdateModalClose = () => {\r\n        setIsUpdateModalOpen(false);\r\n        setCurrentRoleUpdate({ roleName: \"\", authType: \"NOT_IDENTIFIED\", password: \"\" });\r\n    };\r\n\r\n    // Input handlers\r\n    const handleCreateInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentRoleCreate({ ...currentRoleCreate, [name]: value });\r\n    };\r\n\r\n    const handleUpdateInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentRoleUpdate({ ...currentRoleUpdate, [name]: value });\r\n    };\r\n    // Submit handlers\r\n    const handleCreateSubmit = async () => {\r\n        try {\r\n            await createRole(currentRoleCreate);\r\n            const updatedRoles = await fetchRoles();\r\n            setRoles(updatedRoles);\r\n            handleCreateModalClose();\r\n        } catch (err) {\r\n            console.error(\"Error creating role:\", err);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (roleName) => {\r\n        try {\r\n            await deleteRole(roleName);\r\n            alert(\"Rôle supprimé avec succès !\");\r\n            const updatedRoles = await fetchRoles();\r\n            setRoles(updatedRoles);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la suppression du rôle :\", error);\r\n            alert(\"Erreur lors de la suppression du rôle.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleCreateModalOpen} className=\"text-2xl font-semibold mb-4 text-green-600\">\r\n                Ajouter un rôle\r\n            </button>\r\n            <RoleList\r\n                roles={roles}\r\n                loading={loading}\r\n                onEdit={handleUpdateModalOpen}\r\n                onDelete={handleDelete}\r\n            />\r\n            <RoleModalCreate\r\n                isOpen={isCreateModalOpen}\r\n                role={currentRoleCreate}\r\n                onClose={handleCreateModalClose}\r\n                onChange={handleCreateInputChange}\r\n                onSubmit={handleCreateSubmit}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Roles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}